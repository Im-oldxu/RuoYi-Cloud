apiVersion: v1
kind: ConfigMap
metadata:
  name: ruoyi-ui-conf
  namespace: {namespace}
data:
  ui.oldxu.net.conf: |
    server {
      listen 80;
      server_name {host};
      charset utf-8;
      root /code;
      
      location / {
        try_files $uri $uri/ /index.html;
        index  index.html index.htm;
      }
      
      location /prod-api/ {
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header REMOTE-HOST $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://ruoyi-gateway-svc.dev.svc.cluster.local:8080/;
      }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ruoyi-ui
  namespace: {namespace}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ui
  template:
    metadata:
      labels:
        app: ui
    spec:
      imagePullSecrets:
      - name: harbor-admin

      volumes:
      - name: nginxconfs
        configMap:
          name: ruoyi-ui-conf

      containers:
      - name: ruoyi-ui
        image: {image}
        imagePullPolicy: Always
        volumeMounts:
        - name: nginxconfs
          mountPath: /etc/nginx/conf.d/

---
apiVersion: v1
kind: Service
metadata:
  name: ui-svc
  namespace: {namespace}
spec:
  selector:
    app: ui
  ports:
  - name: http
    port: 80
    targetPort: 80

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ui-ingress
  namespace: dev
spec:
  ingressClassName: "nginx"
  rules:
  - host: {host}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ui-svc
            port:
              name: http
